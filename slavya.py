import logging
import time
import random
import pymongo
import os

from aiogram import Bot, Dispatcher, executor, types
from aiogram.utils import executor
from aiogram.types import ReplyKeyboardRemove, ReplyKeyboardMarkup, KeyboardButton, InlineKeyboardMarkup, InlineKeyboardButton
from pymongo import MongoClient

bot = Bot('1303468919:AAGa9vt8IXsEf1M9SOAUjeN1qwrjv6FEYE0')
db = Dispatcher(bot)

logging.basicConfig(level=logging.INFO)
client = pymongo.MongoClient('mongodb+srv://SkyDeaD:GamerVD76@aliceskybotandother-ik6lu.mongodb.net/sl?retryWrites=true&w=majority')
dbm = client.sl
users=dbm.users

banuser = 0
admuser = 0
userstatus = 0
useradm = 0

@db.message_handler(commands=['start'])
async def start_handler(message):
	if message.chat.type == 'private':
		await message.reply(F'–ü—Ä–∏–≤–µ—Ç, {message.from_user.first_name}!\n–ù–∞–∂–º–∏ üëâ/helpüëà ')

@db.message_handler(commands=['help'])
async def help_handler(message):
	if message.chat.type == 'private':
		q = await bot.get_chat(577096232)
		c = await bot.get_chat(-1001183567504)
		await message.reply(F'''
–Ø - –±–æ—Ç –°–ª–∞–≤—è, —Ä–∞–∑—Ä–∞–±–æ—Ç–∞–Ω–Ω—ã–π üëâ[{q.first_name}](tg://user?id=577096232)üëà 

–ë–æ—Ç —Å–æ–∑–¥–∞–≤–∞–ª—Å—è –¥–ª—è –∫–æ–Ω—Ñ—ã üëâ[{c.title}](https://t.me/YgoloMasteraSlavi)üëà


–ù–∞ –¥–∞–Ω–Ω—ã–π –º–æ–º–µ–Ω—Ç –¥–æ—Å—Ç—É–ø–Ω—ã —Å–ª–µ–¥—É—é—â–∏–µ –∫–æ–º–∞–Ω–¥—ã:

*üë§me* - –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ —Å–µ–±–µ.

*‚ÑπÔ∏èinfo* - –ø–æ–ª–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ –∏ –≥—Ä—É–ø–ø–µ.

*üåüadmins* - —Å–ø–∏—Å–æ–∫ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–≤.

*üìú* - –ø—Ä–∞–≤–∏–ª–∞ —á–∞—Ç–∞.

*‚úÇÔ∏è* - —É—Å—Ç–∞–Ω–æ–≤–∏—Ç—å/–æ–±–Ω–æ–≤–∏—Ç—å –ø—Ä–∞–≤–∏–ª–∞ —á–∞—Ç–∞.

*üóû* - —É–¥–∞–ª–∏—Ç—å –ø—Ä–∞–≤–ª–∞ —á–∞—Ç–∞.

*ü§êMute* - –∫–∏–¥–∞–µ—Ç –≤—ã–±—Ä–∞–Ω–Ω–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –≤ –º—É—Ç.

*üò¨Amute* - –ø–æ–ø—ã—Ç–∫–∞ –∑–∞–º—É—Ç–∏—Ç—å –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞. –î–æ—Å—Ç—É–ø–Ω–∞ —Ç–æ–ª—å–∫–æ –≤–ª–∞–¥–µ–ª—å—Ü—É –≥—Ä—É–ø–ø—ã. –ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä –¥–æ–ª–∂–µ–Ω –±—ã—Ç—å –Ω–∞–∑–Ω–∞—á–µ–Ω —á–µ—Ä–µ–∑ –±–æ—Ç–∞.

*üòÄUnmute* - —Ä–∞–∑–º—É—á–µ–≤–∞–µ—Ç –≤—ã–±—Ä–∞–Ω–Ω–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è.

*üòÉUnban* - —Ä–∞–∑–±–∞–Ω–∏–≤–∞–µ—Ç –≤—ã–±—Ä–∞–Ω–Ω–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è.

*ü§ïKick* - –≤—ã–≥–æ–Ω—è–µ—Ç –≤—ã–±—Ä–∞–Ω–Ω–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è.

*üò£Akick* - –ø–æ–ø—ã—Ç–∫–∞ –∫–∏–∫–Ω—É—Ç—å –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞. –î–æ—Å—Ç—É–ø–Ω–∞ —Ç–æ–ª—å–∫–æ –≤–ª–∞–¥–µ–ª—å—Ü—É –≥—Ä—É–ø–ø—ã. –ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä –¥–æ–ª–∂–µ–Ω –±—ã—Ç—å –Ω–∞–∑–Ω–∞—á–µ–Ω —á–µ—Ä–µ–∑ –±–æ—Ç–∞.

*üìåPin* - –∑–∞–∫—Ä–µ–ø–ª—è–µ—Ç –≤—ã–±—Ä–∞–Ω–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ.

*‚ùåUnpin* - –æ—Ç–∫—Ä–µ–ø–ª—è–µ—Ç –∑–∞–∫—Ä–µ–ø–ª—ë–Ω–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ.

*üö´Delete* - —É–¥–∞–ª—è–µ—Ç –≤—ã–±—Ä–∞–Ω–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ.

*üßπPurge* - —á–∏—Å—Ç–∏—Ç —á–∞—Ç. –£–¥–∞–ª—è–µ—Ç –≤—ã–±—Ä–∞–Ω–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –∏ –≤—Å—ë —Ç–æ, —á—Ç–æ –Ω–∏–∂–µ –µ–≥–æ.

*‚è´Promote* - –ø–æ–≤—ã—à–∞–µ—Ç –≤—ã–±—Ä–∞–Ω–Ω–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –¥–æ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞; –¥–æ—Å—Ç—É–ø–Ω–æ —Ç–æ–ª—å–∫–æ –≤–ª–∞–¥–µ–ª—å—Ü—É —á–∞—Ç–∞.

*‚è¨Demote* - –ø–æ–Ω–∏–∂–∞–µ—Ç –≤—ã–±—Ä–∞–Ω–Ω–æ–≥–æ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞; –¥–æ—Å—Ç—É–ø–Ω–æ —Ç–æ–ª—å–∫–æ –≤–ª–∞–¥–µ–ª—å—Ü—É —á–∞—Ç–∞.

–¢–∞–∫ –∂–µ —Å—É—â–µ—Å—Ç–≤—É—é—Ç –∫–æ–º–∞–Ω–¥—ã, –∫–æ—Ç–æ—Ä—ã–µ –æ—Ç—Å—Ç—É—Å—Ç–≤—É—é—Ç –≤ —Å–ø–∏—Å–∫–µ.


–î–ª—è –ø–æ–ª–Ω–æ—Ü–µ–Ω–Ω—ã–π —Ä–∞–±–æ—Ç—ã –≤ –≥—Ä—É–ø–ø–µ –º–Ω–µ —Ç—Ä–µ–±—É—é—Ç—Å—è —Å–ª–µ–¥—É—é—â–∏–µ —Ä–∞–∑—Ä–µ—à–µ–Ω–∏—è:

„ÄΩÔ∏è–ò–∑–º–µ–Ω–µ–Ω–∏—è –ø—Ä–æ—Ñ–∏–ª—è –≥—Ä—É–ø–ø—ã
‚ùå–£–¥–∞–ª–µ–Ω–∏–µ —Å–æ–æ–±—â–µ–Ω–∏–π
üìõ–ë–ª–æ–∫–∏—Ä–æ–≤–∫–∞ —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤
üì®–ü—Ä–∏–≥–ª–∞—Å–∏—Ç–µ–ª—å–Ω—ã–µ —Å—Å—ã–ª–∫–∏
üìå–ó–∞–∫—Ä–µ–ø–ª–µ–Ω–∏–µ —Å–æ–æ–±—â–µ–Ω–∏–π
‚≠êÔ∏è–î–æ–±–∞–≤–ª–µ–Ω–∏–µ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–≤
''', parse_mode = 'markdown')
	else:
		help_msg = await message.reply('''
–ù–∞ –¥–∞–Ω–Ω—ã–π –º–æ–º–µ–Ω—Ç –¥–æ—Å—Ç—É–ø–Ω—ã —Å–ª–µ–¥—É—é—â–∏–µ –∫–æ–º–∞–Ω–¥—ã:

*üë§me* - –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ —Å–µ–±–µ.

*‚ÑπÔ∏èinfo* - –ø–æ–ª–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ –∏ –≥—Ä—É–ø–ø–µ.

*üåüadmins* - —Å–ø–∏—Å–æ–∫ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–≤.

*üìú* - –ø—Ä–∞–≤–∏–ª–∞ —á–∞—Ç–∞.

*‚úÇÔ∏è* - —É—Å—Ç–∞–Ω–æ–≤–∏—Ç—å/–æ–±–Ω–æ–≤–∏—Ç—å –ø—Ä–∞–≤–∏–ª–∞ —á–∞—Ç–∞.

*üóû* - —É–¥–∞–ª–∏—Ç—å –ø—Ä–∞–≤–ª–∞ —á–∞—Ç–∞.

*ü§êMute* - –∫–∏–¥–∞–µ—Ç –≤—ã–±—Ä–∞–Ω–Ω–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –≤ –º—É—Ç.

*üò¨Amute* - –ø–æ–ø—ã—Ç–∫–∞ –∑–∞–º—É—Ç–∏—Ç—å –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞. –î–æ—Å—Ç—É–ø–Ω–∞ —Ç–æ–ª—å–∫–æ –≤–ª–∞–¥–µ–ª—å—Ü—É –≥—Ä—É–ø–ø—ã. –ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä –¥–æ–ª–∂–µ–Ω –±—ã—Ç—å –Ω–∞–∑–Ω–∞—á–µ–Ω —á–µ—Ä–µ–∑ –±–æ—Ç–∞.

*üòÄUnmute* - —Ä–∞–∑–º—É—á–µ–≤–∞–µ—Ç –≤—ã–±—Ä–∞–Ω–Ω–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è.

*üòÉUnban* - —Ä–∞–∑–±–∞–Ω–∏–≤–∞–µ—Ç –≤—ã–±—Ä–∞–Ω–Ω–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è.

*ü§ïKick* - –≤—ã–≥–æ–Ω—è–µ—Ç –≤—ã–±—Ä–∞–Ω–Ω–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è.

*üò£Akick* - –ø–æ–ø—ã—Ç–∫–∞ –∫–∏–∫–Ω—É—Ç—å –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞. –î–æ—Å—Ç—É–ø–Ω–∞ —Ç–æ–ª—å–∫–æ –≤–ª–∞–¥–µ–ª—å—Ü—É –≥—Ä—É–ø–ø—ã. –ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä –¥–æ–ª–∂–µ–Ω –±—ã—Ç—å –Ω–∞–∑–Ω–∞—á–µ–Ω —á–µ—Ä–µ–∑ –±–æ—Ç–∞.

*üìåPin* - –∑–∞–∫—Ä–µ–ø–ª—è–µ—Ç –≤—ã–±—Ä–∞–Ω–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ.

*‚ùåUnpin* - –æ—Ç–∫—Ä–µ–ø–ª—è–µ—Ç –∑–∞–∫—Ä–µ–ø–ª—ë–Ω–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ.

*üö´Delete* - —É–¥–∞–ª—è–µ—Ç –≤—ã–±—Ä–∞–Ω–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ.

*üßπPurge* - —á–∏—Å—Ç–∏—Ç —á–∞—Ç. –£–¥–∞–ª—è–µ—Ç –≤—ã–±—Ä–∞–Ω–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –∏ –≤—Å—ë —Ç–æ, —á—Ç–æ –Ω–∏–∂–µ –µ–≥–æ.

*‚è´Promote* - –ø–æ–≤—ã—à–∞–µ—Ç –≤—ã–±—Ä–∞–Ω–Ω–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –¥–æ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞; –¥–æ—Å—Ç—É–ø–Ω–æ —Ç–æ–ª—å–∫–æ –≤–ª–∞–¥–µ–ª—å—Ü—É —á–∞—Ç–∞.

*‚è¨Demote* - –ø–æ–Ω–∏–∂–∞–µ—Ç –≤—ã–±—Ä–∞–Ω–Ω–æ–≥–æ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞; –¥–æ—Å—Ç—É–ø–Ω–æ —Ç–æ–ª—å–∫–æ –≤–ª–∞–¥–µ–ª—å—Ü—É —á–∞—Ç–∞.

–¢–∞–∫ –∂–µ —Å—É—â–µ—Å—Ç–≤—É—é—Ç –∫–æ–º–∞–Ω–¥—ã, –∫–æ—Ç–æ—Ä—ã–µ –æ—Ç—Å—Ç—É—Å—Ç–≤—É—é—Ç –≤ —Å–ø–∏—Å–∫–µ.
''', parse_mode = 'markdown')
		time.sleep(60)
		await bot.delete_message(message.chat.id, help_msg.message_id)
		await bot.delete_message(message.chat.id, message.message_id)

@db.message_handler(content_types=['new_chat_members'])
async def handler_new_member(message):
	for user in message.new_chat_members:
		if user.id in [1303468919]:
			await bot.send_message(message.chat.id, '–ü—Ä–∏–≤–µ—Ç! –Ø - –±–æ—Ç-–∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä –°–ª–∞–≤—è. –î–ª—è –ø–æ–ª–Ω–æ—Ü–µ–Ω–Ω—ã–π —Ä–∞–±–æ—Ç—ã –≤—ã–¥–∞–π –º–Ω–µ —Å–ª–µ–¥—É—é—â–∏–µ —Ä–∞–∑—Ä–µ—à–µ–Ω–∏—è:\n\n„ÄΩÔ∏è–ò–∑–º–µ–Ω–µ–Ω–∏—è –ø—Ä–æ—Ñ–∏–ª—è –≥—Ä—É–ø–ø—ã\n‚ùå–£–¥–∞–ª–µ–Ω–∏–µ —Å–æ–æ–±—â–µ–Ω–∏–π\nüìõ–ë–ª–æ–∫–∏—Ä–æ–≤–∫–∞ —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤\nüì®–ü—Ä–∏–≥–ª–∞—Å–∏—Ç–µ–ª—å–Ω—ã–µ —Å—Å—ã–ª–∫–∏\nüìå–ó–∞–∫—Ä–µ–ø–ª–µ–Ω–∏–µ —Å–æ–æ–±—â–µ–Ω–∏–π\n‚≠êÔ∏è–î–æ–±–∞–≤–ª–µ–Ω–∏–µ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–≤')
		else:
			for user in message.new_chat_members:
				sti = open('welcome.webp', 'rb')
				await bot.send_sticker(message.chat.id, sti, reply_to_message_id=message.message_id)
				await bot.send_message(message.chat.id, F'–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ —á–∞—Ç [{message.chat.title}](https://t.me/{message.chat.username}), [{user.first_name}](tg://user?id={user.id})!\n\n–ü—Ä–µ–¥–ª–∞–≥–∞—é –æ–∑–Ω–∞–∫–æ–º–∏—Ç—å—Å—è —Å –ø—Ä–∞–≤–∏–ª–∞–º–∏:\nüëâ/rulesüëà', reply_to_message_id=message.message_id, parse_mode='markdown')

@db.message_handler(commands=['mute'])
async def handle_mute(message):
	if message.chat.type == 'private':
		return
	usera = await bot.get_chat_member(message.chat.id, message.from_user.id)
	if usera.status not in ['administrator', 'creator']:
		await message.reply('–£ –í–∞—Å –Ω–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –ø—Ä–∞–≤ –¥–ª—è –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è —ç—Ç–æ–π –∫–æ–º–º–∞–Ω–¥—ã.')
		return
	if usera.can_restrict_members is False:
		await message.reply('–£ –í–∞—Å –Ω–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –ø—Ä–∞–≤ –¥–ª—è –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è —ç—Ç–æ–π –∫–æ–º–∞–Ω–¥—ã.')
		return
	prom = await bot.get_chat_member(message.chat.id, 1303468919)
	if prom.can_restrict_members is not True:
		await message.reply('–î–ª—è –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è –¥–∞–Ω–Ω–æ–π –∫–æ–º–∞–Ω–¥—ã —Ç—Ä–µ–±—É—é—Ç—Å—è —Å–ª–µ–¥—É—é—â–∏–µ –ø—Ä–∞–≤–∞ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞:\n\nüìõ–ë–ª–æ–∫–∏—Ä–æ–≤–∫–∞ —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤.')
		return
	if message.reply_to_message is None:
		await message.reply('–Ø –Ω–µ –ø–æ–Ω–∏–º–∞—é, –æ –∫–æ–º –∏–¥—ë—Ç —Ä–µ—á—å?')
		return
	user = await bot.get_chat_member(message.chat.id, message.reply_to_message.from_user.id)
	if user.is_member is False:
		await message.reply(F'[{message.reply_to_message.from_user.first_name}](tg://user?id={message.reply_to_message.from_user.id}) –Ω–µ —è–≤–ª—è–µ—Ç—Å—è —É—á–∞—Å—Ç–Ω–∏–∫–æ–º —á–∞—Ç–∞.', parse_mode='markdown')
		return
	if user.status in ['administrator', 'creator']:
		await message.reply('–Ø –Ω–µ –±—É–¥—É –º—É—Ç–∏—Ç—å –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞!')
		return
	u_mute = await bot.get_chat_member(message.chat.id, message.reply_to_message.from_user.id)
	if u_mute.can_send_messages is False:
		await message.reply(F'[{message.reply_to_message.from_user.first_name}](tg://user?id={message.reply_to_message.from_user.id}) –∏ —Ç–∞–∫ –º–æ–ª—á–∏—Ç.', parse_mode='markdown')
		return
	await bot.restrict_chat_member(message.chat.id, message.reply_to_message.from_user.id, until_date = time.time())
	await message.reply(F'[{message.reply_to_message.from_user.first_name}](tg://user?id={message.reply_to_message.from_user.id}) –ø–æ—Ç–µ—Ä—è–ª –≥–æ–ª–æ—Å.', parse_mode='markdown')					
	sticker_mute = open('mute.webp', 'rb')
	await message.answer_sticker(sticker_mute)

@db.message_handler(commands=['amute'])
async def handle_amute(message):
	if message.chat.type == 'private':
		return
	usera = await bot.get_chat_member(message.chat.id, message.from_user.id)
	if usera.status != 'creator':
		await message.reply('–£ –í–∞—Å –Ω–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –ø—Ä–∞–≤ –¥–ª—è –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è —ç—Ç–æ–π –∫–æ–º–º–∞–Ω–¥—ã.')
		return
	prom = await bot.get_chat_member(message.chat.id, 1303468919)
	if prom.can_restrict_members is False:
		await message.reply('–î–ª—è –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è –¥–∞–Ω–Ω–æ–π –∫–æ–º–∞–Ω–¥—ã —Ç—Ä–µ–±—É—é—Ç—Å—è —Å–ª–µ–¥—É—é—â–∏–µ –ø—Ä–∞–≤–∞ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞:\n\nüìõ–ë–ª–æ–∫–∏—Ä–æ–≤–∫–∞ —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤.')
		return
	if message.reply_to_message is None:
		await message.reply('–Ø –Ω–µ –ø–æ–Ω–∏–º–∞—é, –æ –∫–æ–º –∏–¥—ë—Ç —Ä–µ—á—å?')
		return
	user = await bot.get_chat_member(message.chat.id, message.reply_to_message.from_user.id)
	if user.is_member is False:
		await message.reply(F'[{message.reply_to_message.from_user.first_name}](tg://user?id={message.reply_to_message.from_user.id}) –Ω–µ —è–≤–ª—è–µ—Ç—Å—è —É—á–∞—Å—Ç–Ω–∏–∫–æ–º —á–∞—Ç–∞.', parse_mode='markdown')
		return
	u_mute = await bot.get_chat_member(message.chat.id, message.reply_to_message.from_user.id)
	if u_mute.can_send_messages is False:
		await message.reply(F'[{message.reply_to_message.from_user.first_name}](tg://user?id={message.reply_to_message.from_user.id}) –∏ —Ç–∞–∫ –º–æ–ª—á–∏—Ç.', parse_mode='markdown')
		return
	try:
		await bot.restrict_chat_member(message.chat.id, message.reply_to_message.from_user.id, until_date = time.time())
		await message.reply(F'–£ [{message.reply_to_message.from_user.first_name}](tg://user?id={message.reply_to_message.from_user.id}) –±—ã–ª —Å–Ω—è—Ç —Å –¥–æ–ª–∂–Ω–æ—Å—Ç–∏ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞ –∏ –ø–æ—Ç–µ—Ä—è–ª –≥–æ–ª–æ—Å.', parse_mode='markdown')					
		sticker_mute = open('mute.webp', 'rb')
		await message.answer_sticker(sticker_mute)
	except:
		await message.reply('–Ø –Ω–µ –º–æ–≥—É –∑–∞–º—É—Ç–∏—Ç—å –¥–∞–Ω–Ω–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è.')
		sticker_nonmute = open('cant.webp', 'rb')
		await message.answer_sticker(sticker_nonmute)

@db.message_handler(commands=['unmute'])
async def handle_unmute(message):
	if message.chat.type == 'private':
		return
	usera = await bot.get_chat_member(message.chat.id, message.from_user.id)
	if usera.status not in ['administrator', 'creator']:
		return
	if usera.can_restrict_members is False:
		await message.reply('–£ –í–∞—Å –Ω–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –ø—Ä–∞–≤ –¥–ª—è –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è —ç—Ç–æ–π –∫–æ–º–∞–Ω–¥—ã.')
		return
	prom = await bot.get_chat_member(message.chat.id, 1303468919)
	if prom.can_restrict_members is False:
		await message.reply('–î–ª—è –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è –¥–∞–Ω–Ω–æ–π –∫–æ–º–∞–Ω–¥—ã —Ç—Ä–µ–±—É—é—Ç—Å—è —Å–ª–µ–¥—É—é—â–∏–µ –ø—Ä–∞–≤–∞ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞:\n\nüìõ–ë–ª–æ–∫–∏—Ä–æ–≤–∫–∞ —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤.')
		return
	if message.reply_to_message is None:
		await message.reply('–Ø –Ω–µ –ø–æ–Ω–∏–º–∞—é, –æ –∫–æ–º –∏–¥—ë—Ç —Ä–µ—á—å?')
		return
	user = await bot.get_chat_member( message.chat.id, message.reply_to_message.from_user.id)
	if user.is_member is False:
		await message.reply(F'[{message.reply_to_message.from_user.first_name}](tg://user?id={message.reply_to_message.from_user.id}) –Ω–µ —è–≤–ª—è–µ—Ç—Å—è —É—á–∞—Å—Ç–Ω–∏–∫–æ–º —á–∞—Ç–∞.', parse_mode='markdown')
		return
	if user.status in ['administrator', 'creator']:
		await message.reply('–ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä –Ω–µ –º–æ–∂–µ—Ç –±—ã—Ç—å –≤ –º—É—Ç–µ.')
		return
	u_unmute = await bot.get_chat_member(message.chat.id, message.reply_to_message.from_user.id)
	if u_unmute.can_send_messages in [True,None]:
		await message.reply(F'[{message.reply_to_message.from_user.first_name}](tg://user?id={message.reply_to_message.from_user.id}) –Ω–µ –≤ –º—É—Ç–µ.', parse_mode='markdown')
		return
	await bot.restrict_chat_member(message.chat.id,message.reply_to_message.from_user.id, can_send_messages=True, can_send_media_messages=True, can_send_other_messages=True, can_add_web_page_previews=True)						
	await message.reply(F'[{message.reply_to_message.from_user.first_name}](tg://user?id={message.reply_to_message.from_user.id}) —Å–Ω–æ–≤–∞ –º–æ–∂–µ—Ç –≥–æ–≤–æ—Ä–∏—Ç—å.', parse_mode='markdown')
	sticker_unmute = open('unmute.webp', 'rb')
	await message.answer_sticker(sticker_unmute)						

@db.message_handler(commands=['promote'])
async def handle_promote(message):
	if message.chat.type == 'private':
		return
	usera = await bot.get_chat_member(message.chat.id, message.from_user.id)
	if usera.status != 'creator':
		await message.reply('–£ –í–∞—Å –Ω–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –ø—Ä–∞–≤ –¥–ª—è –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è —ç—Ç–æ–π –∫–æ–º–∞–Ω–¥—ã.')
		return
	prom = await bot.get_chat_member(message.chat.id, 1303468919)
	if prom.can_promote_members is not True:
		await message.reply('–î–ª—è –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è –¥–∞–Ω–Ω–æ–π –∫–æ–º–∞–Ω–¥—ã —Ç—Ä–µ–±—É—é—Ç—Å—è —Å–ª–µ–¥—É—é—â–∏–µ –ø—Ä–∞–≤–∞ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞:\n\n‚≠êÔ∏è–î–æ–±–∞–≤–ª–µ–Ω–∏–µ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–≤.')
		return
	if message.reply_to_message is None:
		await message.reply('–Ø –Ω–µ –ø–æ–Ω–∏–º–∞—é, –æ –∫–æ–º –∏–¥—ë—Ç —Ä–µ—á—å?')
		return
	user = await bot.get_chat_member(message.chat.id, message.reply_to_message.from_user.id)
	if user.is_member is False:
		await message.reply(F'[{message.reply_to_message.from_user.first_name}](tg://user?id={message.reply_to_message.from_user.id}) –Ω–µ —è–≤–ª—è–µ—Ç—Å—è —É—á–∞—Å—Ç–Ω–∏–∫–æ–º —á–∞—Ç–∞.', parse_mode='markdown')
		return
	if user.status in ['administrator', 'creator']:
		await message.reply(F'[{message.reply_to_message.from_user.first_name}](tg://user?id={message.reply_to_message.from_user.id}) —É–∂–µ —è–≤–ª—è–µ—Ç—Å—è –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–º!', parse_mode='markdown')
		return
	await message.reply(F'[{message.reply_to_message.from_user.first_name}](tg://user?id={message.reply_to_message.from_user.id}) –ø–æ–≤—ã—à–µ–Ω(–∞)!', parse_mode='markdown')
	await bot.promote_chat_member(message.chat.id, message.reply_to_message.from_user.id, can_change_info=True, can_delete_messages=True, can_invite_users=True, can_restrict_members=True, can_pin_messages=True, can_promote_members=True)
					
@db.message_handler(commands=['demote'])
async def handle_demote(message):
	if message.chat.type == 'private':
		return
	usera = await bot.get_chat_member(message.chat.id, message.from_user.id)
	if usera.status != 'creator':
		await message.reply('–£ –í–∞—Å –Ω–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –ø—Ä–∞–≤ –¥–ª—è –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è —ç—Ç–æ–π –∫–æ–º–∞–Ω–¥—ã.')
		return
	prom = await bot.get_chat_member(message.chat.id, 1303468919)
	if prom.can_promote_members is not True:
		await message.reply('–î–ª—è –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è –¥–∞–Ω–Ω–æ–π –∫–æ–º–∞–Ω–¥—ã —Ç—Ä–µ–±—É—é—Ç—Å—è —Å–ª–µ–¥—É—é—â–∏–µ –ø—Ä–∞–≤–∞ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞:\n\n‚≠êÔ∏è–î–æ–±–∞–≤–ª–µ–Ω–∏–µ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–≤.')
		return
	if message.reply_to_message is None:
		await message.reply('–Ø –Ω–µ –ø–æ–Ω–∏–º–∞—é, –æ –∫–æ–º –∏–¥—ë—Ç —Ä–µ—á—å?')
		return
	user = await bot.get_chat_member(message.chat.id, message.reply_to_message.from_user.id)
	if user.is_member is False:
		await message.reply(F'[{message.reply_to_message.from_user.first_name}](tg://user?id={message.reply_to_message.from_user.id}) –Ω–µ —è–≤–ª—è–µ—Ç—Å—è —É—á–∞—Å—Ç–Ω–∏–∫–æ–º —á–∞—Ç–∞.', parse_mode='markdown')
		return
	if user.status not in ['administrator', 'creator']:
		await message.reply(F'[{message.reply_to_message.from_user.first_name}](tg://user?id={message.reply_to_message.from_user.id}) –Ω–µ —è–≤–ª—è–µ—Ç—Å—è –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–º.', parse_mode='markdown')
		return
	await message.reply(F'[{message.reply_to_message.from_user.first_name}](tg://user?id={message.reply_to_message.from_user.id}) –ø–æ–Ω–∏–∂–µ–Ω(–∞)!', parse_mode='markdown')
	await bot.promote_chat_member(message.chat.id, message.reply_to_message.from_user.id, can_change_info=False, can_delete_messages=False, can_invite_users=False, can_restrict_members=False, can_pin_messages=False, can_promote_members=False)

@db.message_handler(commands=['kick'])
async def handle_kick(message):
	if message.chat.type == 'private':
		return
	usera = await bot.get_chat_member(message.chat.id, message.from_user.id)
	if usera.status not in ['administrator', 'creator']:
		await message.reply('–£ –í–∞—Å –Ω–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –ø—Ä–∞–≤ –¥–ª—è –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è —ç—Ç–æ–π –∫–æ–º–∞–Ω–¥—ã.')
		return
	if usera.can_restrict_members is not True:
		await message.reply('–£ –í–∞—Å –Ω–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –ø—Ä–∞–≤ –¥–ª—è –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è —ç—Ç–æ–π –∫–æ–º–∞–Ω–¥—ã.')
		return
	prom = await bot.get_chat_member(message.chat.id, 1303468919)
	if prom.can_restrict_members is not True:
		await message.reply('–î–ª—è –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è –¥–∞–Ω–Ω–æ–π –∫–æ–º–∞–Ω–¥—ã —Ç—Ä–µ–±—É—é—Ç—Å—è —Å–ª–µ–¥—É—é—â–∏–µ –ø—Ä–∞–≤–∞ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞:\n\nüìõ–ë–ª–æ–∫–∏—Ä–æ–≤–∫–∞ —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤.')
		return
	if message.reply_to_message is None:
		await message.reply('–Ø –Ω–µ –ø–æ–Ω–∏–º–∞—é, –æ –∫–æ–º –∏–¥—ë—Ç —Ä–µ—á—å?')
		return
	user = await bot.get_chat_member(message.chat.id, message.reply_to_message.from_user.id)
	if user.is_member is False:
		await message.reply(F'[{message.reply_to_message.from_user.first_name}](tg://user?id={message.reply_to_message.from_user.id}) –Ω–µ —è–≤–ª—è–µ—Ç—Å—è —É—á–∞—Å—Ç–Ω–∏–∫–æ–º —á–∞—Ç–∞.', parse_mode='markdown')
		return
	if user.status in ['administrator', 'creator']:
		await message.reply('–Ø –Ω–µ –º–æ–≥—É –∫–∏–∫–Ω—É—Ç—å –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞.')
		return
	await bot.kick_chat_member(message.chat.id, message.reply_to_message.from_user.id)						
	await bot.unban_chat_member(message.chat.id, message.reply_to_message.from_user.id)
	await message.reply(F'[{message.reply_to_message.from_user.first_name}](tg://user?id={message.reply_to_message.from_user.id}) —Ä–µ—à–∏–ª(–∞) –æ—Ç–æ–π—Ç–∏ üòÑ', parse_mode='markdown')
	sticker_kick = open('kick.webp', 'rb')
	await message.answer_sticker(sticker_kick)
		
@db.message_handler(commands=['akick'])
async def handle_akick(message):
	if message.chat.type == 'private':
		return
	usera = await bot.get_chat_member(message.chat.id, message.from_user.id)
	if usera.status != 'creator':
		await message.reply('–£ –í–∞—Å –Ω–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –ø—Ä–∞–≤ –¥–ª—è –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è —ç—Ç–æ–π –∫–æ–º–∞–Ω–¥—ã.')
		return
	prom = await bot.get_chat_member(message.chat.id, 1303468919)
	if prom.can_restrict_members is not True:
		await message.reply('–î–ª—è –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è –¥–∞–Ω–Ω–æ–π –∫–æ–º–∞–Ω–¥—ã —Ç—Ä–µ–±—É—é—Ç—Å—è —Å–ª–µ–¥—É—é—â–∏–µ –ø—Ä–∞–≤–∞ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞:\n\nüìõ–ë–ª–æ–∫–∏—Ä–æ–≤–∫–∞ —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤.')
		return
	if message.reply_to_message is None:
		await message.reply('–Ø –Ω–µ –ø–æ–Ω–∏–º–∞—é, –æ –∫–æ–º –∏–¥—ë—Ç —Ä–µ—á—å?')
		return
	user = await bot.get_chat_member(message.chat.id, message.reply_to_message.from_user.id)
	if user.is_member is False:
		await message.reply(F'[{message.reply_to_message.from_user.first_name}](tg://user?id={message.reply_to_message.from_user.id}) –Ω–µ —è–≤–ª—è–µ—Ç—Å—è —É—á–∞—Å—Ç–Ω–∏–∫–æ–º —á–∞—Ç–∞.', parse_mode='markdown')
		return
	try:
		await bot.kick_chat_member(message.chat.id, message.reply_to_message.from_user.id)						
		await bot.unban_chat_member(message.chat.id, message.reply_to_message.from_user.id)
		await message.reply(F'[{message.reply_to_message.from_user.first_name}](tg://user?id={message.reply_to_message.from_user.id}) —Ä–µ—à–∏–ª(–∞) –æ—Ç–æ–π—Ç–∏ üòÑ', parse_mode='markdown')
		sticker_kick = open('kick.webp', 'rb')
		await message.reply_sticker(sticker_kick)
	except:
		await message.reply('–Ø –Ω–µ –º–æ–≥—É –∫–∏–∫–Ω—É—Ç—å –¥–∞–Ω–Ω–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è.')
		sticker_nonkick = open('cant.webp', 'rb')
		await message.answer_sticker(sticker_nonkick)

@db.message_handler(commands=['unban'])
async def handle_unban(message):
	if message.chat.type == 'private':
		return
	usera = await bot.get_chat_member(message.chat.id, message.from_user.id)
	if usera.status not in ['administrator', 'creator']:
		await message.reply('–£ –í–∞—Å –Ω–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –ø—Ä–∞–≤ –¥–ª—è –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è —ç—Ç–æ–π –∫–æ–º–∞–Ω–¥—ã.')
		return
	if usera.can_restrict_members is False:
		await message.reply('–£ –í–∞—Å –Ω–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –ø—Ä–∞–≤ –¥–ª—è –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è —ç—Ç–æ–π –∫–æ–º–∞–Ω–¥—ã.')
		return
	prom = await bot.get_chat_member(message.chat.id, 1303468919)
	if prom.can_restrict_members is False:
		await message.reply('–î–ª—è –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è –¥–∞–Ω–Ω–æ–π –∫–æ–º–∞–Ω–¥—ã —Ç—Ä–µ–±—É—é—Ç—Å—è —Å–ª–µ–¥—É—é—â–∏–µ –ø—Ä–∞–≤–∞ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞:\n\nüìõ–ë–ª–æ–∫–∏—Ä–æ–≤–∫–∞ —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤.')
		return
	if message.reply_to_message is None:
		await message.reply('–Ø –Ω–µ –ø–æ–Ω–∏–º–∞—é, –æ –∫–æ–º –∏–¥—ë—Ç —Ä–µ—á—å?')
		return
	user = await bot.get_chat_member(message.chat.id, message.reply_to_message.from_user.id)
	if user.is_member is False:
		await message.reply(F'[{message.reply_to_message.from_user.first_name}](tg://user?id={message.reply_to_message.from_user.id}) –Ω–µ —è–≤–ª—è–µ—Ç—Å—è —É—á–∞—Å—Ç–Ω–∏–∫–æ–º —á–∞—Ç–∞.', parse_mode='markdown')
		return
	if user.status != 'restricted':
		await message.reply(F'[{message.reply_to_message.from_user.first_name}](tg://user?id={message.reply_to_message.from_user.id}) –Ω–µ –∑–∞–±–∞–Ω–µ–Ω.', parse_mode='markdown')
		return
	await bot.unban_chat_member(message.chat.id, message.reply_to_message.from_user.id)
	await message.reply(F'–õ–∞–¥–Ω–æ, [{message.reply_to_message.from_user.first_name}](tg://user?id={message.reply_to_message.from_user.id}) –º–æ–∂–µ—Ç –≤–µ—Ä–Ω—É—Ç—å—Å—è.', parse_mode='markdown')
	sticker_unban = open('unban.webp', 'rb')
	await message.answer_sticker(sticker_unban)

@db.message_handler(commands=['pin'])
async def handle_pin(message):
	if message.chat.type == 'private':
		return
	usera = await bot.get_chat_member(message.chat.id, message.from_user.id)
	if usera.status not in ['administrator', 'creator']:
		await message.reply('–£ –í–∞—Å –Ω–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –ø—Ä–∞–≤ –¥–ª—è –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è —ç—Ç–æ–π –∫–æ–º–∞–Ω–¥—ã.')
		return
	if usera.can_pin_messages is False:
		await message.reply('–£ –í–∞—Å –Ω–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –ø—Ä–∞–≤ –¥–ª—è –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è —ç—Ç–æ–π –∫–æ–º–∞–Ω–¥—ã.')
		return
	prom = await bot.get_chat_member(message.chat.id, 1303468919)
	if prom.can_pin_messages is False:
		await message.reply('–î–ª—è –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è –¥–∞–Ω–Ω–æ–π –∫–æ–º–∞–Ω–¥—ã —Ç—Ä–µ–±—É—é—Ç—Å—è —Å–ª–µ–¥—É—é—â–∏–µ –ø—Ä–∞–≤–∞ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞:\n\nüìå–ó–∞–∫—Ä–µ–ø–ª–µ–Ω–∏–µ —Å–æ–æ–±—â–µ–Ω–∏–π.')
		return
	if message.reply_to_message is None:
		await message.reply('–í—ã–±–µ—Ä–∏—Ç–µ —Å–æ–æ–±—â–µ–Ω–∏–µ, –∫–æ—Ç–æ—Ä–æ–µ –Ω—É–∂–Ω–æ –∑–∞–∫—Ä–µ–ø–∏—Ç—å.')
		return
	await bot.pin_chat_message(message.chat.id, message.reply_to_message.message_id)
	await message.delete()

@db.message_handler(commands=['unpin'])
async def handle_unpin(message):
	if message.chat.type == 'private':
		return
	usera = await bot.get_chat_member(message.chat.id, message.from_user.id)
	if usera.status not in ['administrator', 'creator']:
		await message.reply('–£ –í–∞—Å –Ω–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –ø—Ä–∞–≤ –¥–ª—è –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è —ç—Ç–æ–π –∫–æ–º–∞–Ω–¥—ã.')
		return
	if usera.can_pin_messages is False:
		await message.reply('–£ –í–∞—Å –Ω–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –ø—Ä–∞–≤ –¥–ª—è –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è —ç—Ç–æ–π –∫–æ–º–∞–Ω–¥—ã.')
		return
	prom = await bot.get_chat_member(message.chat.id, 1303468919 )
	if prom.can_pin_messages is False:
		await message.reply('–î–ª—è –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è –¥–∞–Ω–Ω–æ–π –∫–æ–º–∞–Ω–¥—ã —Ç—Ä–µ–±—É—é—Ç—Å—è —Å–ª–µ–¥—É—é—â–∏–µ –ø—Ä–∞–≤–∞ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞:\n\nüìå–ó–∞–∫—Ä–µ–ø–ª–µ–Ω–∏–µ —Å–æ–æ–±—â–µ–Ω–∏–π.')
		return
	await bot.unpin_chat_message(message.chat.id)
	await message.delete()

@db.message_handler(commands=['del'])
async def handle_del(message):
	if message.chat.type == 'private':
		return
	usera = await bot.get_chat_member(message.chat.id, message.from_user.id)
	if usera.status not in ['administrator', 'creator']:
		await message.reply('–£ –í–∞—Å –Ω–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –ø—Ä–∞–≤ –¥–ª—è –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è —ç—Ç–æ–π –∫–æ–º–∞–Ω–¥—ã.')
		return
	if usera.can_delete_messages is False:
		await message.reply('–£ –í–∞—Å –Ω–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –ø—Ä–∞–≤ –¥–ª—è –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è —ç—Ç–æ–π –∫–æ–º–∞–Ω–¥—ã.')
		return
	prom = await bot.get_chat_member(message.chat.id, 1303468919)
	if prom.can_delete_messages is False:
		await message.reply('–î–ª—è –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è –¥–∞–Ω–Ω–æ–π –∫–æ–º–∞–Ω–¥—ã —Ç—Ä–µ–±—É—é—Ç—Å—è —Å–ª–µ–¥—É—é—â–∏–µ –ø—Ä–∞–≤–∞ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞:\n\n‚ùå–£–¥–∞–ª–µ–Ω–∏–µ —Å–æ–æ–±—â–µ–Ω–∏–π.')
		return
	if message.reply_to_message is None:
		await message.reply('–í—ã–±–µ—Ä–∏—Ç–µ —Å–æ–æ–±—â–µ–Ω–∏–µ, –∫–æ—Ç–æ—Ä–æ–µ –Ω—É–∂–Ω–æ —É–¥–∞–ª–∏—Ç—å.')
		return
	await bot.delete_message(message.chat.id, message.message_id)
	await bot.delete_message(message.chat.id, message.reply_to_message.message_id)

@db.message_handler(commands=['purge'])
async def handle_purge(message):
	if message.chat.type == 'private':
		return
	usera = await bot.get_chat_member(message.chat.id, message.from_user.id)
	if usera.status not in ['administrator', 'creator']:
		await message.reply('–£ –í–∞—Å –Ω–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –ø—Ä–∞–≤ –¥–ª—è –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è —ç—Ç–æ–π –∫–æ–º–∞–Ω–¥—ã.')
		return
	prom = await bot.get_chat_member(message.chat.id, 1303468919)
	if prom.can_delete_messages is False:
		await message.reply('–î–ª—è –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è –¥–∞–Ω–Ω–æ–π –∫–æ–º–∞–Ω–¥—ã —Ç—Ä–µ–±—É—é—Ç—Å—è —Å–ª–µ–¥—É—é—â–∏–µ –ø—Ä–∞–≤–∞ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞:\n\n‚ùå–£–¥–∞–ª–µ–Ω–∏–µ —Å–æ–æ–±—â–µ–Ω–∏–π.')
		return
	if message.reply_to_message is None:
		await message.reply('–í—ã–±–µ—Ä–∏—Ç–µ —Å–æ–æ–±—â–µ–Ω–∏–µ, –Ω–∏–∂–µ –∫–æ—Ç–æ—Ä–æ–≥–æ –±—É–¥–µ—Ç –æ—á–∏—â–µ–Ω —á–∞—Ç.')
		return
	i = message.reply_to_message.message_id
	q = message.message_id
	for d in range(i, q):
		try:
			await bot.delete_message(message.chat.id, d)
		except:
			pass
	await message.delete()
	await message.answer('–ß–∏—Å—Ç–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞.')

@db.message_handler(commands=['setrules'])
async def handle_rulses(message):
	if message.chat.type == 'private':
		return
	usera = await bot.get_chat_member(message.chat.id, message.from_user.id)
	if usera.status != 'creator':
		await message.reply('–£ –í–∞—Å –Ω–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –ø—Ä–∞–≤ –¥–ª—è –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è —ç—Ç–æ–π –∫–æ–º–∞–Ω–¥—ã.')
		return
	x = users.find_one({'rules':{'$exists':True}, 'chatid':message.chat.id})
	if x == None:
		rules = message.reply_to_message.text
		users.insert_one({'rules':rules, 'chatid':message.chat.id})
		await message.reply(F'–ü—Ä–∞–≤–∏–ª–∞ —á–∞—Ç–∞ [{message.chat.title}](https://t.me/{message.chat.username}) —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω—ã.', parse_mode='markdown')
	elif x != None:
		rules = message.reply_to_message.text
		users.delete_one({'rules':{'$exists':True}, 'chatid':message.chat.id})
		users.insert_one({'rules':rules, 'chatid':message.chat.id})
		await message.reply(F'–ü—Ä–∞–≤–∏–ª–∞ —á–∞—Ç–∞ [{message.chat.title}](https://t.me/{message.chat.username}) –æ–±–Ω–æ–≤–ª–µ–Ω—ã.', parse_mode='markdown')

@db.message_handler(commands=['delrules'])
async def handle_rulses(message):
	if message.chat.type == 'private':
		return
	usera = await bot.get_chat_member(message.chat.id, message.from_user.id)
	if usera.status != 'creator':
		await message.reply('–£ –í–∞—Å –Ω–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –ø—Ä–∞–≤ –¥–ª—è –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è —ç—Ç–æ–π –∫–æ–º–∞–Ω–¥—ã.')
		return
	users.delete_one({'rules':{'$exists':True}, 'chatid':message.chat.id})
	await message.reply(F'–ü—Ä–∞–≤–∏–ª–∞ —á–∞—Ç–∞ [{message.chat.title}](https://t.me/{message.chat.username}) —É–¥–∞–ª–µ–Ω—ã.', parse_mode='markdown')

@db.message_handler(commands=['rules'])
async def handle_rulses(message):
	if message.chat.type == 'private':
		return
	x = users.find_one({'rules':{'$exists':True}, 'chatid':message.chat.id})
	if x == None:
		await bot.send_message(message.chat.id, F'–í –¥–∞–Ω–Ω–æ–º —á–∞—Ç–µ –ø–æ–∫–∞ —á—Ç–æ –Ω–µ—Ç –ø—Ä–∞–≤–∏–ª.', reply_to_message_id=message.message_id, parse_mode='markdown')
	else:
		for rul in users.find({'chatid':message.chat.id}):
			await bot.send_message(message.chat.id, rul['rules'], reply_to_message_id=message.message_id, parse_mode='markdown')

@db.message_handler(commands=["report"])
async def mandle_report(message):
	if message.chat.type == 'private':
		return
	if message.reply_to_message is None:
		await message.reply('–í—ã–±–µ—Ä–∏—Ç–µ —Å–æ–æ–±—â–µ–Ω–∏–µ, –Ω–∞ –∫–æ—Ç–æ—Ä–æ–µ —Ö–æ—Ç–∏—Ç–µ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å—Å—è.')
		return
	adm = await bot.get_chat_administrators(message.chat.id)
	text = '–ù–∞ –¥–∞–Ω–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –ø–æ—Å—Ç—É–ø–∏–ª–∞ –∂–∞–ª–æ–±–∞.\n\n'
	for i in adm:
		if i.user.is_bot is False:
			text += f"\n@{i.user.username}"
	await message.reply(text)

@db.message_handler(commands=['me'])
async def handle_message(message):
	await bot.send_message( message.chat.id, F''' 
*–í–∞—à–µ –∏–º—è*: `{message.from_user.first_name}`
*–í–∞—à —é–∑–µ—Ä–Ω–µ–π–º*: `@{message.from_user.username}`
*–í–∞—à ID*: `{message.from_user.id} `
''', reply_to_message_id = message.message_id, parse_mode='markdown')

@db.message_handler(commands=['info'])
async def handle_info(message):
	if message.chat.type == 'private':
		return
	if message.reply_to_message is not None:
		adm = await bot.get_chat_member(message.chat.id, message.reply_to_message.from_user.id)
		group_id = await bot.get_chat(message.chat.id)
		await message.reply(F'''
*üöª–ò–º—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è*: `{message.reply_to_message.from_user.first_name}`
*üñã–Æ–∑–µ—Ä–Ω–µ–π–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è*: `@{message.reply_to_message.from_user.username}`
*‚ÑπÔ∏èID –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è*: `{message.reply_to_message.from_user.id}`
*üì´–°—Ç–∞—Ç—É—Å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è*: `{adm.status}`
*üìï–ù–∞–∑–≤–∞–Ω–∏–µ –≥—Ä—É–ø–ø—ã*: `{group_id.title}`
*üÜîID –≥—Ä—É–ø–ø—ã*: `{group_id.id}`
*üî†–¢–∏–ø –≥—Ä—É–ø–ø—ã*: `{group_id.type}`
''', parse_mode='markdown')
		return
	adm = await bot.get_chat_member(message.chat.id, message.from_user.id)
	group_id = await bot.get_chat(message.chat.id)
	await message.reply(F'''
*üöª–ò–º—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è*: `{message.from_user.first_name}`
*üñã–Æ–∑–µ—Ä–Ω–µ–π–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è*: `@{message.from_user.username}`
*‚ÑπÔ∏èID –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è*: `{message.from_user.id}`
*üì´–°—Ç–∞—Ç—É—Å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è*: `{adm.status}`
*üìï–ù–∞–∑–≤–∞–Ω–∏–µ –≥—Ä—É–ø–ø—ã*: `{group_id.title}`
*üÜîID –≥—Ä—É–ø–ø—ã*: `{group_id.id}`
*üî†–¢–∏–ø –≥—Ä—É–ø–ø—ã*: `{group_id.type}`
''', parse_mode='markdown')

@db.message_handler(commands=['admins'])
async def handle_admins(message):
	if message.chat.type == 'private':
		return
	adm = await bot.get_chat_administrators(message.chat.id)
	text = '–ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä—ã —á–∞—Ç–∞:\n'
	for i in adm:
		if i.user.is_bot==False:
			text += f'\n–ò–º—è - {i.user.first_name}\n–Æ–∑–µ—Ä–Ω–µ–π–º - {i.user.username}\n'
	await message.reply(text)

@db.message_handler(commands=['save'])
async def handle_save(message):
	if message.from_user.id not in [577096232, 609565291]:
		return
	if message.reply_to_message is None:
		return
	if message.reply_to_message.content_type == "photo":
		x = users.find_one({'type_cer':'photo', 'doc_id':message.reply_to_message.photo[-1].file_id})
		if x == None:
			users.insert_one({'type_cer':'photo', 'doc_id':message.reply_to_message.photo[-1].file_id})
			await message.reply('–§–∞–π–ª —Å–æ—Ö—Ä–∞–Ω—ë–Ω!')
		else:
			await message.reply('–î–∞–Ω–Ω—ã–π —Ñ–∞–π–ª —É–∂–µ —Å–æ—Ö—Ä–∞–Ω—ë–Ω!')
	elif message.reply_to_message.content_type == "animation":
		x = users.find_one({'type_cer':'anim', 'doc_id':message.reply_to_message.animation.file_id})
		if x == None:
			users.insert_one({'type_cer':'anim', 'doc_id':message.reply_to_message.animation.file_id})
			await message.reply('–§–∞–π–ª —Å–æ—Ö—Ä–∞–Ω—ë–Ω!')
		else:
			await message.reply('–î–∞–Ω–Ω—ã–π —Ñ–∞–π–ª —É–∂–µ —Å–æ—Ö—Ä–∞–Ω—ë–Ω!')
	else:
		await message.reply('–ù—É–∂–Ω–æ –≤—ã–±—Ä–∞—Ç—å —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏—é –∏–ª–∏ gif-–∞–Ω–∏–º–∞—Ü–∏—é.')

@db.message_handler(commands=['ksave'])
async def handle_ksave(message):
	if message.from_user.id not in [577096232, 609565291]:
		return
	if message.reply_to_message is None:
		return
	if message.reply_to_message.content_type == "audio":
		x = users.find_one({'type_kino':'music', 'doc_id':message.reply_to_message.audio.file_id})
		if x == None:
			users.insert_one({'type_kino':'music', 'doc_id':message.reply_to_message.audio.file_id})
			await message.reply('–§–∞–π–ª —Å–æ—Ö—Ä–∞–Ω—ë–Ω!')
		else:
			await message.reply('–î–∞–Ω–Ω—ã–π —Ñ–∞–π–ª —É–∂–µ —Å–æ—Ö—Ä–∞–Ω—ë–Ω!')
	else:
		await message.reply('–ù—É–∂–Ω–æ –≤—ã–±—Ä–∞—Ç—å –ø–µ—Å–Ω—é.')

@db.message_handler(commands=['count'])
async def handle_count(message):
	if message.from_user.id not in [577096232, 609565291]:
		return
	a = []
	b = []
	c = []
	for i in users.find({'type_cer':'photo'}):
		a.append(i['doc_id'])
	for g in users.find({'type_cer':'anim'}):
		b.append(g['doc_id'])
	for h in users.find({'type_kino':'music'}):
		c.append(h['doc_id'])
	await message.reply(F'–ù–∞ –¥–∞–Ω–Ω—ã–π –º–æ–º–µ–Ω—Ç –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö —Ö—Ä–∞–Ω–∏—Ç—Å—è:\n\n' + str((len(a))) + ' ' + '–∫–∞—Ä—Ç–∏–Ω–æ–∫\n' + str((len(b))) + ' ' + 'gif-–∞–Ω–∏–º–∞—Ü–∏–π\n' + str((len(c))) + ' ' + '–ö–æ–º–ø–æ–∑–∏—Ü–∏–π –≥—Ä—É–ø–ø—ã \'–ö–∏–Ω–æ\'\n')

@db.message_handler(regexp='—Ñ—É–ª–ª')
async def full_ban(message):
	if message.chat.type == 'private':
		return
	await message.reply_photo('AgACAgIAAxkBAAPmXyGM-GqjlGEabzESpkikWfQRIcIAAgiuMRtGQhBJHQZufSPeAo_6avuULgADAQADAgADeQADq5wCAAEaBA')

@db.message_handler(regexp='—Ü–µ—Ä–±–µ—Ä–∞ —Ö–æ—á—É')
async def ceph(message):
	if message.chat.id not in [-1001216079799, -1001183567504] or message.from_user.id != 609565291:
		return
	n = message.from_user.first_name
	n = n.replace('*', '').replace('_', '').replace('`', '').replace('~', '')
	z = message.from_user.last_name
	if z != None:
		z = z.replace('*', '').replace('_', '').replace('`', '').replace('~', '')
		x = users.find_one({'id':message.from_user.id})
		if x == None:
			users.insert_one({'id':609565291, 'times':0})
		else:
			users.update_one({'id':609565291}, {'$inc':{'times':1}})
			for time in users.find({'id':609565291}):
				await message.reply(F'*{n} {z}* –∑–∞–µ–±–∞–ª, —Ö–æ—á–µ—Ç –¶–µ—Ä–±–µ—Ä–∞ —É–∂–µ –≤*' + ' ' +str(time['times']) + ' ' + '*—Ä–∞–∑.', parse_mode='markdown')
	else:
		x = users.find_one({'id':message.from_user.id})
		if x == None:
			users.insert_one({'id':609565291, 'times':0})
		else:
			users.update_one({'id':609565291}, {'$inc':{'times':1}})
			for time in users.find({'id':609565291}):
				await message.reply(F'*{n}* –∑–∞–µ–±–∞–ª, —Ö–æ—á–µ—Ç –¶–µ—Ä–±–µ—Ä–∞ —É–∂–µ –≤*' + ' ' +str(time['times']) + ' ' + '*—Ä–∞–∑.', parse_mode='markdown')

@db.message_handler(regexp='–ø–æ—Ö—É–π')
async def pox(message):
	if message.chat.id  not in [-1001216079799, -1001183567504] or message.from_user.id != 577096232:
		return
	n = message.from_user.first_name
	n = n.replace('*', '').replace('_', '').replace('`', '').replace('~', '')
	z = message.from_user.last_name
	if z != None:
		z = z.replace('*', '').replace('_', '').replace('`', '').replace('~', '')
		x = users.find_one({'id':message.from_user.id})
		if x == None:
			users.insert_one({'id':577096232, 'times':0})
		else:
			users.update_one({'id':577096232}, {'$inc':{'times':1}})
			for time in users.find({'id':577096232}):
				await message.reply(F'*{n} {z}* –ø–æ—Ö—É–π —É–∂–µ –≤*' + ' ' +str(time['times']) + ' ' + '*—Ä–∞–∑.', parse_mode='markdown')
	else:
		x = users.find_one({'id':message.from_user.id})
		if x == None:
			users.insert_one({'id':577096232, 'times':0})
		else:
			users.update_one({'id':577096232}, {'$inc':{'times':1}})
			for time in users.find({'id':577096232}):
				await message.reply(F'*{n}* –ø–æ—Ö—É–π —É–∂–µ –≤*' + ' ' +str(time['times']) + ' ' + '*—Ä–∞–∑.', parse_mode='markdown')

@db.message_handler(regexp='—Ö–æ—á—É 02')
async def pox(message):
	if message.chat.id != -1001216079799 and message.from_user.id != 839954020:
		return
	n = message.from_user.first_name
	n = n.replace('*', '').replace('_', '').replace('`', '').replace('~', '')
	z = message.from_user.last_name
	if z !=None:
		z = z.replace('*', '').replace('_', '').replace('`', '').replace('~', '')
		x = users.find_one({'id':message.from_user.id})
		if x == None:
			users.insert_one({'id':839954020, 'times':0})
		else:
			users.update_one({'id':839954020}, {'$inc':{'times':1}})
			for time in users.find({'id':839954020}):
				await message.reply(F'*{n} {z}* —Ö–æ—á–µ—Ç 02 —É–∂–µ –≤*' + ' ' +str(time['times']) + ' ' + '*—Ä–∞–∑.', parse_mode='markdown')
	else:
		x = users.find_one({'id':message.from_user.id})
		if x == None:
			users.insert_one({'id':839954020, 'times':0})
		else:
			users.update_one({'id':839954020}, {'$inc':{'times':1}})
			for time in users.find({'id':839954020}):
				await message.reply(F'*{n}* —Ö–æ—á–µ—Ç 02 —É–∂–µ –≤*' + ' ' +str(time['times']) + ' ' + '*—Ä–∞–∑.', parse_mode='markdown')

@db.message_handler(regexp='—Ö–æ—á—É –≤–∏–æ–ª—É')
async def pox(message):
	if message.chat.id != -1001216079799 and message.from_user.id != 593146532:
		return
	n = message.from_user.first_name
	n = n.replace('*', '').replace('_', '').replace('`', '').replace('~', '')
	z = message.from_user.last_name
	if z !=None:
		z = z.replace('*', '').replace('_', '').replace('`', '').replace('~', '')
		x = users.find_one({'id':message.from_user.id})
		if x == None:
			users.insert_one({'id':593146532, 'times':0})
		else:
			users.update_one({'id':593146532}, {'$inc':{'times':1}})
			for time in users.find({'id':593146532}):
				await message.reply(F'*{n} {z}* —Ö–æ—á–µ—Ç –í–∏–æ–ª—É —É–∂–µ –≤*' + ' ' +str(time['times']) + ' ' + '*—Ä–∞–∑.', parse_mode='markdown')
	else:
		x = users.find_one({'id':message.from_user.id})
		if x == None:
			users.insert_one({'id':593146532, 'times':0})
		else:
			users.update_one({'id':593146532}, {'$inc':{'times':1}})
			for time in users.find({'id':593146532}):
				await message.reply(F'*{n}* —Ö–æ—á–µ—Ç –í–∏–æ–ª—É —É–∂–µ –≤*' + ' ' +str(time['times']) + ' ' + '*—Ä–∞–∑.', parse_mode='markdown')

@db.message_handler(regexp='—Å–ª–∞–≤–∞ –≤–∏–æ–ª–µ')
async def pox(message):
	if message.chat.id != -1001216079799 and message.from_user.id != 593146532:
		return
	n = message.from_user.first_name
	n = n.replace('*', '').replace('_', '').replace('`', '').replace('~', '')
	z = message.from_user.last_name
	if z !=None:
		z = z.replace('*', '').replace('_', '').replace('`', '').replace('~', '')
		x = users.find_one({'id':message.from_user.id})
		if x == None:
			users.insert_one({'id':593146532, 'times':0})
		else:
			users.update_one({'id':593146532}, {'$inc':{'times':1}})
			for time in users.find({'id':593146532}):
				await message.reply(F'*{n} {z}* –≤–æ—Å—Ö–≤–∞–ª—è–µ—Ç –í–∏–æ–ª—É —É–∂–µ –≤*' + ' ' +str(time['times']) + ' ' + '*—Ä–∞–∑.', parse_mode='markdown')
	else:
		x = users.find_one({'id':message.from_user.id})
		if x == None:
			users.insert_one({'id':593146532, 'times':0})
		else:
			users.update_one({'id':593146532}, {'$inc':{'times':1}})
			for time in users.find({'id':593146532}):
				await message.reply(F'*{n}* –≤–æ—Å—Ö–≤–∞–ª—è–µ—Ç –í–∏–æ–ª—É —É–∂–µ –≤*' + ' ' +str(time['times']) + ' ' + '*—Ä–∞–∑.', parse_mode='markdown')

@db.message_handler(regexp='—Ö–æ—á—É –ø–∏—Ü—Ü—É')
async def pox(message):
	if message.chat.id != -1001216079799 and message.from_user.id != 541023518:
		return
	n = message.from_user.first_name
	n = n.replace('*', '').replace('_', '').replace('`', '').replace('~', '')
	z = message.from_user.last_name
	if z != None:
		z = z.replace('*', '').replace('_', '').replace('`', '').replace('~', '')
		x = users.find_one({'id':message.from_user.id})
		if x == None:
			users.insert_one({'id':541023518, 'times':0})
		else:
			users.update_one({'id':541023518}, {'$inc':{'times':1}})
			for time in users.find({'id':541023518}):
				await message.reply(F'*{n} {z}* —Ö–æ—á–µ—Ç –ø–∏—Ü—Ü—É —É–∂–µ –≤*' + ' ' +str(time['times']) + ' ' + '*—Ä–∞–∑.', parse_mode='markdown')
	else:
		x = users.find_one({'id':message.from_user.id})
		if x == None:
			users.insert_one({'id':541023518, 'times':0})
		else:
			users.update_one({'id':541023518}, {'$inc':{'times':1}})
			for time in users.find({'id':541023518}):
				await message.reply(F'*{n}* —Ö–æ—á–µ—Ç –ø–∏—Ü—Ü—É —É–∂–µ –≤*' + ' ' +str(time['times']) + ' ' + '*—Ä–∞–∑.', parse_mode='markdown')

@db.message_handler(regexp='—Å–ª–∞–≤–∞ —Å–∏—Ç–∏—Å—É')
async def pox(message):
	if message.chat.id != -1001216079799 and message.from_user.id != 717015019:
		return
	n = message.from_user.first_name
	n = n.replace('*', '').replace('_', '').replace('`', '').replace('~', '')
	z = message.from_user.last_name
	if z != None:
		z = z.replace('*', '').replace('_', '').replace('`', '').replace('~', '')
		x = users.find_one({'id':message.from_user.id})
		if x == None:
			users.insert_one({'id':717015019, 'times':0})
		else:
			users.update_one({'id':717015019}, {'$inc':{'times':1}})
			for time in users.find({'id':717015019}):
				await message.reply(F'*{n} {z}* –≤–æ—Å—Ö–≤–∞–ª—è–µ—Ç –°–∏—Ç–∏—Å–∞ —É–∂–µ –≤*' + ' ' +str(time['times']) + ' ' + '*—Ä–∞–∑.', parse_mode='markdown')
	else:
		x = users.find_one({'id':message.from_user.id})
		if x == None:
			users.insert_one({'id':717015019, 'times':0})
		else:
			users.update_one({'id':717015019}, {'$inc':{'times':1}})
			for time in users.find({'id':717015019}):
				await message.reply(F'*{n}* –≤–æ—Å—Ö–≤–∞–ª—è–µ—Ç –°–∏—Ç–∏—Å–∞ —É–∂–µ –≤*' + ' ' +str(time['times']) + ' ' + '*—Ä–∞–∑.', parse_mode='markdown')

@db.message_handler(regexp='—Ö–≤–∞–ª–∞ —Ä–∞–Ω–¥–æ–º—É')
async def pox(message):
	if message.chat.id != -1001216079799 and message.from_user.id != 533271886:
		return
	n = message.from_user.first_name
	n = n.replace('*', '').replace('_', '').replace('`', '').replace('~', '')
	z = message.from_user.last_name
	if z != None:
		z = z.replace('*', '').replace('_', '').replace('`', '').replace('~', '')
		x = users.find_one({'id':message.from_user.id})
		if x == None:
			users.insert_one({'id':533271886, 'times':0})
		else:
			users.update_one({'id':533271886}, {'$inc':{'times':1}})
			for time in users.find({'id':533271886}):
				await message.reply(F'*{n} {z}* –≤–æ—Å—Ö–≤–∞–ª—è–µ—Ç –†–∞–Ω–¥–æ–º —É–∂–µ –≤*' + ' ' +str(time['times']) + ' ' + '*—Ä–∞–∑.', parse_mode='markdown')
	else:
		x = users.find_one({'id':message.from_user.id})
		if x == None:
			users.insert_one({'id':533271886, 'times':0})
		else:
			users.update_one({'id':533271886}, {'$inc':{'times':1}})
			for time in users.find({'id':533271886}):
				await message.reply(F'*{n}* –≤–æ—Å—Ö–≤–∞–ª—è–µ—Ç –†–∞–Ω–¥–æ–º —É–∂–µ –≤*' + ' ' +str(time['times']) + ' ' + '*—Ä–∞–∑.', parse_mode='markdown')

@db.message_handler(regexp='—Ü–µ—Ä–±–µ—Ä')
async def handle_cerber(message):
	a=[]
	ran = random.randint(1,2)
	if ran == 1:
		for i in users.find({'type_cer':'photo'}):
			a.append(i['doc_id'])
		p_id = random.choice(a)
		await message.reply_photo(p_id)
	else:
		for i in users.find({'type_cer':'anim'}):
			a.append(i['doc_id'])
		p_id = random.choice(a)
		await message.reply_animation(p_id)

@db.callback_query_handler(text='1')
async def button_reaction(call: types.CallbackQuery):
	global banuser
	global admuser
	global useradm
	global userstatus
	if call.message:
		if call.from_user.id == admuser and userstatus.status in ['creator']:
			try:
				await bot.kick_chat_member(chat_id=call.message.chat.id, user_id=banuser) 
				await call.message.edit_caption(F'*‚Äî‚Äî–°—É–¥ –í–ª–∞—Å—Ç–µ–ª–∏–Ω–æ–≤ –∫–∞–∑–Ω–∏–ª* [–Ω–µ–≤–µ—Ä–Ω–æ–≥–æ](tg://user?id={banuser})!‚Äî‚Äî', parse_mode='markdown')
				await bot.send_animation(chat_id=call.message.chat.id, animation='CgACAgQAAxkBAAIBel8pztumhQxhwkZ8QQ29C_3ltR2-AAJ8AgAC2MRNUZCDixLVkQwVGgQ', reply_to_message_id=call.message.message_id)
			except:
				await call.message.edit_caption('*‚Äî‚Äî‚Äî–û—à–∏–±–∫–∞!‚Äî‚Äî‚Äî*', parse_mode='markdown')
		elif call.from_user.id == admuser and userstatus.status in ['administrator']:
			if useradm.status == 'creator':
				await call.message.edit_caption('*+++++–ë–∞—Ç—é —É–±–∏—Ç—å –Ω–µ–≤–æ–∑–º–æ–∂–Ω–æ, —Å–æ—Å–∏—Ç–µ —Å–æ—Å–Ω—É+++++*', parse_mode='markdown')
			elif useradm.status != 'administrator':
				await bot.kick_chat_member(chat_id=call.message.chat.id, user_id=banuser) 
				await call.message.edit_caption(F'*‚Äî‚Äî–°—É–¥ –í–ª–∞—Å—Ç–µ–ª–∏–Ω–æ–≤ –∫–∞–∑–Ω–∏–ª* [–Ω–µ–≤–µ—Ä–Ω–æ–≥–æ](tg://user?id={banuser})!‚Äî‚Äî', parse_mode='markdown')
				await bot.send_animation(chat_id=call.message.chat.id, animation='CgACAgQAAxkBAAIBel8pztumhQxhwkZ8QQ29C_3ltR2-AAJ8AgAC2MRNUZCDixLVkQwVGgQ', reply_to_message_id=call.message.message_id)
			else:
				await call.message.edit_caption('*‚Äî‚Äî‚Äî–û—à–∏–±–∫–∞!‚Äî‚Äî‚Äî*', parse_mode='markdown')

@db.callback_query_handler(text='2')
async def button_reaction(call: types.CallbackQuery):
	global banuser
	global admuser
	if call.message:
		if call.from_user.id == admuser:
			await call.message.edit_caption('\*\*\*'+'*–í–ª–∞—Å—Ç–µ–ª–∏–Ω—ã –º–∏–ª–æ—Å–µ—Ä–¥–Ω–æ –ø—Ä–æ—Å—Ç–∏–ª–∏*'+' '+F'[–ê–Ω–æ–Ω–∏–º–∞](tg://user?id={banuser})'+'*; —Å—Ç—É–ø–∞–π —Å –º–∏—Ä–æ–º.*'+'\*\*\*', reply_to_message_id=call.message.message_id, parse_mode='markdown')
			await bot.send_animation(chat_id=call.message.chat.id, animation='CgACAgIAAxkBAAIBe18p1NYZODgJhLLQq28aHskjKP9cAALpAwACgyVYS3rEbZUfdbcKGgQ')

@db.message_handler(content_types=['text'])
async def handle_text(message):
	if message.text.lower() == '–≤–ª–∞—Å—Ç–∏–ª–∏–Ω—É—Å –ø–µ–Ω–∏—Ç—Ä–∞—Ç—É—Å':
		if message.chat.type == 'private':
			return
		if message.reply_to_message is None:
			return
		if message.from_user.id!=message.reply_to_message.from_user.id:
			user_1 = await bot.get_chat_member(message.chat.id, message.from_user.id)
			user_2 = await bot.get_chat_member(message.chat.id, message.reply_to_message.from_user.id)
			if user_1.status not in ['administrator', 'creator']:
				await bot.restrict_chat_member(message.chat.id, message.from_user.id, until_date = time.time())
			if user_2.status not in ['administrator', 'creator']:
				await bot.restrict_chat_member(message.chat.id, message.reply_to_message.from_user.id, until_date = time.time())
			await bot.send_message(message.chat.id, F'*{message.from_user.first_name}* –∏ *{message.reply_to_message.from_user.first_name}* –Ω–µ –ø–æ–¥–µ–ª–∏–ª–∏ –£–ª—å—è–Ω–∏–Ω –ø–∏—Ä–æ–∂–æ–∫ –∏ –±—ã–ª–∏ –∑–∞–º—É—á–µ–Ω—ã.', reply_to_message_id=message.message_id, parse_mode='markdown' )
	
	elif message.text.lower() == '–≤–ª–∞—Å—Ç–∏–ª–∏–Ω–∞—Ç—É—Å':
		prom = await bot.get_chat_member(message.chat.id, 1303468919)
		if prom.can_restrict_members is False:
			await message.reply('–î–ª—è –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è –¥–∞–Ω–Ω–æ–π –∫–æ–º–∞–Ω–¥—ã —Ç—Ä–µ–±—É—é—Ç—Å—è —Å–ª–µ–¥—É—é—â–∏–µ –ø—Ä–∞–≤–∞ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞:\n\nüìõ–ë–ª–æ–∫–∏—Ä–æ–≤–∫–∞ —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤.')
			return
		if message.reply_to_message is None:
			return
		if message.chat.type == 'private':
			return
		usera = await bot.get_chat_member(message.chat.id, message.from_user.id)
		if usera.status not in ['administrator', 'creator']:
			return
		global banuser
		banuser = message.reply_to_message.from_user.id
		global admuser
		admuser = message.from_user.id
		global userstatus
		userstatus = await bot.get_chat_member(message.chat.id, message.from_user.id)
		global useradm
		useradm = await bot.get_chat_member(message.chat.id, message.reply_to_message.from_user.id)
		keyboard = types.InlineKeyboardMarkup(row_width = 1)
		item1 = types.InlineKeyboardButton(text='–ë–∞–Ω–•–∞–º–º–µ—Ä–æ–º –≤ –ª–∏—Ü–æ', callback_data='1')
		item2 = types.InlineKeyboardButton(text='–ü–æ—â–∞–¥–∏—Ç—å –ê–Ω–æ–Ω–∞', callback_data='2')
		keyboard.add(item1, item2)
		await bot.send_photo(message.chat.id, 'AgACAgIAAxkBAAIBeV8puKv2I-flODKea1u-40ECk89sAAL4rjEbsFRRSVEBLpMMCS_oGuc-li4AAwEAAwIAA3kAAwQ8AAIaBA', F'–†–µ—à–∞–µ—Ç—Å—è —Å—É–¥—å–±–∞ [–ê–Ω–æ–Ω–∏–º–∞](tg://user?id={message.reply_to_message.from_user.id}), –í–ª–∞—Å—Ç–µ–ª–∏–Ω—ã, –≥–æ—Ç–æ–≤—å—Ç–µ—Å—å!', reply_to_message_id=message.message_id, reply_markup=keyboard, parse_mode='markdown')

	elif message.text.lower() == '—Ü–æ–π –∂–∏–≤':
		a = []
		if message.from_user.id not in [577096232, 609565291]:
			return
		for i in users.find({'type_kino':'music'}):
			a.append(i['doc_id'])
		p_id = random.choice(a)
		await message.reply_audio(p_id)

	elif message.text.lower() == '–≤—Å–µ —Ñ–æ—Ç–æ':
		if message.chat.type != 'private':
			return
		if message.from_user.id not in [577096232, 609565291]:
			return
		for i in users.find({'type_cer':'photo'}):
			await message.answer_photo(i['doc_id'])
		for i in users.find({'type_cer':'anim'}):
			await message.answer_animation(i['doc_id'])

	elif message.text.lower() == '–≤—Å—è –º—É–∑—ã–∫–∞':
		if message.chat.type != 'private':
			return
		if message.from_user.id not in [577096232, 609565291]:
			return
		for i in users.find({'type_kino':'music'}):
			await message.answer_audio(i['doc_id'])

if __name__ == '__main__':
    executor.start_polling(db, skip_updates=True)